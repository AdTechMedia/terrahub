  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_lb:
        {{ name }}:
          # internal: false
          # load_balancer_type: ''
          # subnets: []
          # enable_http2: false
          # name: ''
          # security_groups: []
          # access_logs: []
          # idle_timeout: 0
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # subnet_mapping: 
          #   subnet_id: ''
          #   allocation_id: ''
          # ip_address_type: ''
          # name_prefix: ''
          # enable_deletion_protection: false
          # enable_cross_zone_load_balancing: false
    output:
      id:
        value: aws_lb.{{ name }}.id
      thub_id:
        value: aws_lb.{{ name }}.id
      dns_name:
        value: aws_lb.{{ name }}.dns_name
      arn_suffix:
        value: aws_lb.{{ name }}.arn_suffix
      internal:
        value: aws_lb.{{ name }}.internal
      subnets:
        value: aws_lb.{{ name }}.subnets
      name:
        value: aws_lb.{{ name }}.name
      security_groups:
        value: aws_lb.{{ name }}.security_groups
      arn:
        value: aws_lb.{{ name }}.arn
      subnet_mapping:
        value: aws_lb.{{ name }}.subnet_mapping
      ip_address_type:
        value: aws_lb.{{ name }}.ip_address_type
      zone_id:
        value: aws_lb.{{ name }}.zone_id
      vpc_id:
        value: aws_lb.{{ name }}.vpc_id
