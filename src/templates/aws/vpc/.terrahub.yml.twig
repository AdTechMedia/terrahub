  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_vpc:
        {{ name }}:
          cidr_block: var.{{ name }}_cidr_block
          # enable_dns_hostnames: false
          # enable_classiclink: false
          # enable_classiclink_dns_support: false
          # assign_generated_ipv6_cidr_block: false
          # instance_tenancy: ''
          # enable_dns_support: false
          # tags: 
          #   '[TO_BE_REPLACED]': ''
    variable:
      {{ name }}_cidr_block:
        type: string
    output:
      id:
        value: aws_vpc.{{ name }}.id
      thub_id:
        value: aws_vpc.{{ name }}.id
      ipv6_cidr_block:
        value: aws_vpc.{{ name }}.ipv6_cidr_block
      enable_dns_hostnames:
        value: aws_vpc.{{ name }}.enable_dns_hostnames
      default_route_table_id:
        value: aws_vpc.{{ name }}.default_route_table_id
      enable_classiclink:
        value: aws_vpc.{{ name }}.enable_classiclink
      enable_classiclink_dns_support:
        value: aws_vpc.{{ name }}.enable_classiclink_dns_support
      main_route_table_id:
        value: aws_vpc.{{ name }}.main_route_table_id
      default_network_acl_id:
        value: aws_vpc.{{ name }}.default_network_acl_id
      dhcp_options_id:
        value: aws_vpc.{{ name }}.dhcp_options_id
      owner_id:
        value: aws_vpc.{{ name }}.owner_id
      arn:
        value: aws_vpc.{{ name }}.arn
      default_security_group_id:
        value: aws_vpc.{{ name }}.default_security_group_id
      ipv6_association_id:
        value: aws_vpc.{{ name }}.ipv6_association_id
