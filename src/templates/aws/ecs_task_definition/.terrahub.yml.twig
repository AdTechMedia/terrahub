  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_ecs_task_definition:
        {{ name }}:
          container_definitions: var.{{ name }}_container_definitions
          family: var.{{ name }}_family
          # ipc_mode: ''
          # execution_role_arn: ''
          # memory: ''
          # volume: 
          #   name: ''
          #   host_path: ''
          #   docker_volume_configuration: 
          #     -
          #       driver_opts: 
          #           '[TO_BE_REPLACED]': ''
          #       labels: 
          #           '[TO_BE_REPLACED]': ''
          #       scope: ''
          #       autoprovision: false
          #       driver: ''
          # placement_constraints: 
          #   type: ''
          #   expression: ''
          # requires_compatibilities: []
          # cpu: ''
          # network_mode: ''
          # proxy_configuration: 
          #   -
          #     container_name: ''
          #     properties: 
          #       '[TO_BE_REPLACED]': ''
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # task_role_arn: ''
          # pid_mode: ''
    variable:
      {{ name }}_container_definitions:
        type: string
      {{ name }}_family:
        type: string
    output:
      id:
        value: aws_ecs_task_definition.{{ name }}.id
      thub_id:
        value: aws_ecs_task_definition.{{ name }}.id
      revision:
        value: aws_ecs_task_definition.{{ name }}.revision
      network_mode:
        value: aws_ecs_task_definition.{{ name }}.network_mode
      arn:
        value: aws_ecs_task_definition.{{ name }}.arn
