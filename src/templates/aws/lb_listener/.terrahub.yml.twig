  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_lb_listener:
        {{ name }}:
          load_balancer_arn: var.{{ name }}_load_balancer_arn
          port: var.{{ name }}_port
          default_action: 
            -
              type: ''
          #     order: 0
          #     target_group_arn: ''
          #     redirect: 
          #       -
          #         status_code: ''
          #         host: ''
          #         path: ''
          #         port: ''
          #         protocol: ''
          #         query: ''
          # certificate_arn: ''
          # authenticate_oidc: 
          #   -
          #     token_endpoint: ''
          #     client_id: ''
          #     issuer: ''
          #     user_info_endpoint: ''
          #     authorization_endpoint: ''
          #     client_secret: ''
          #     on_unauthenticated_request: ''
          #     scope: ''
          #     session_cookie_name: ''
          #     session_timeout: 0
          #     authentication_request_extra_params: 
          #       '[TO_BE_REPLACED]': ''
          # protocol: ''
          # ssl_policy: ''
          # authenticate_cognito: 
          #   -
          #     user_pool_client_id: ''
          #     user_pool_domain: ''
          #     user_pool_arn: ''
          #     authentication_request_extra_params: 
          #       '[TO_BE_REPLACED]': ''
          #     on_unauthenticated_request: ''
          #     scope: ''
          #     session_cookie_name: ''
          #     session_timeout: 0
    variable:
      {{ name }}_load_balancer_arn:
        type: string
      {{ name }}_port:
        type: int
    output:
      id:
        value: aws_lb_listener.{{ name }}.id
      thub_id:
        value: aws_lb_listener.{{ name }}.id
      arn:
        value: aws_lb_listener.{{ name }}.arn
      ssl_policy:
        value: aws_lb_listener.{{ name }}.ssl_policy
