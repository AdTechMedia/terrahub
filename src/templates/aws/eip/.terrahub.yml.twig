  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_eip:
        {{ name }}:
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # instance: ''
          # associate_with_private_ip: ''
          # public_ipv4_pool: ''
          # vpc: false
          # network_interface: ''
    output:
      id:
        value: aws_eip.{{ name }}.id
      thub_id:
        value: aws_eip.{{ name }}.id
      instance:
        value: aws_eip.{{ name }}.instance
      association_id:
        value: aws_eip.{{ name }}.association_id
      domain:
        value: aws_eip.{{ name }}.domain
      public_ip:
        value: aws_eip.{{ name }}.public_ip
      private_ip:
        value: aws_eip.{{ name }}.private_ip
      public_ipv4_pool:
        value: aws_eip.{{ name }}.public_ipv4_pool
      vpc:
        value: aws_eip.{{ name }}.vpc
      network_interface:
        value: aws_eip.{{ name }}.network_interface
      allocation_id:
        value: aws_eip.{{ name }}.allocation_id
      public_dns:
        value: aws_eip.{{ name }}.public_dns
      private_dns:
        value: aws_eip.{{ name }}.private_dns
