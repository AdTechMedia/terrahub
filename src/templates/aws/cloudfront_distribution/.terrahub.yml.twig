  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_cloudfront_distribution:
        {{ name }}:
          default_cache_behavior:
            allowed_methods: []
            cached_methods: []
            forwarded_values:
              cookies:
                forward: ''
          #       whitelisted_names:
          #         -
          #   compress: false
          #   default_ttl: 0
          #   field_level_encryption_id: ''
          restrictions:
            geo_restriction:
              restriction_type: ''
          #     locations:
          #       -
          enabled: '${var.{{ name }}_enabled}'
          target_origin_id: '${var.{{ name }}_target_origin_id}'
          origin:
          #   custom_origin_config:
          #     http_port: 0
          #     https_port: 0
          #     origin_protocol_policy: ''
          #     origin_ssl_protocols: []
          #     origin_keepalive_timeout: 0
          #     origin_read_timeout: 0
          path_pattern: '${var.{{ name }}_path_pattern}'
          viewer_protocol_policy: '${var.{{ name }}_viewer_protocol_policy}'
          origin_id: '${var.{{ name }}_origin_id}'
          viewer_certificate:
          #   acm_certificate_arn: ''
          #   cloudfront_default_certificate: false
          #   iam_certificate_id: ''
          #   minimum_protocol_version: ''
          #   ssl_support_method: ''
          # origin_path: ''
          # web_acl_id: ''
          # comment: ''
          # s3_origin_config:
          #   origin_access_identity: ''
          # tags:
          #   '[TO_BE_REPLACED]': ''
          # smooth_streaming: false
          # ordered_cache_behavior:
          #   -
          #     allowed_methods: []
          #     cached_methods: []
          #     forwarded_values:
          #     cookies:
          #       forward: ''
          #       whitelisted_names:
          #         -
          #     compress: false
          #     default_ttl: 0
          #     field_level_encryption_id: ''
          # trusted_signers: []
          # custom_error_response:
          #   error_code: 0
          #   error_caching_min_ttl: 0
          #   response_code: 0
          #   response_page_path: ''
          # retain_on_delete: false
          # max_ttl: 0
          # cache_behavior: []
          # default_root_object: ''
          # http_version: ''
          # price_class: ''
          # is_ipv6_enabled: false
          # min_ttl: 0
          # lambda_function_association:
          #   lambda_arn: ''
          #   event_type: ''
          #   include_body: false
          # logging_config:
          #   bucket: ''
          #   include_cookies: false
          #   prefix: ''
          # aliases: []
    variable:
      {{ name }}_enabled:
        type: 'bool'
      {{ name }}_target_origin_id:
        type: 'string'
      {{ name }}_path_pattern:
        type: 'string'
      {{ name }}_viewer_protocol_policy:
        type: 'string'
      {{ name }}_origin_id:
        type: 'string'
    output:
      id:
        value: '${aws_cloudfront_distribution.{{ name }}.id}'
      thub_id:
        value: '${aws_cloudfront_distribution.{{ name }}.id}'
      in_progress_validation_batches:
        value: '${aws_cloudfront_distribution.{{ name }}.in_progress_validation_batches}'
      hosted_zone_id:
        value: '${aws_cloudfront_distribution.{{ name }}.hosted_zone_id}'
      active_trusted_signers:
        value: '${aws_cloudfront_distribution.{{ name }}.active_trusted_signers}'
      last_modified_time:
        value: '${aws_cloudfront_distribution.{{ name }}.last_modified_time}'
      arn:
        value: '${aws_cloudfront_distribution.{{ name }}.arn}'
      caller_reference:
        value: '${aws_cloudfront_distribution.{{ name }}.caller_reference}'
      status:
        value: '${aws_cloudfront_distribution.{{ name }}.status}'
      domain_name:
        value: '${aws_cloudfront_distribution.{{ name }}.domain_name}'
      etag:
        value: '${aws_cloudfront_distribution.{{ name }}.etag}'

## build config
# build:
#   env:
#     variables:
#       THUB_S3_BUCKET_NAME: s3://
#   phases:
#     pre_build:
#       commands:
#         - echo 'BUILD: Running pre_build step'
#       finally:
#         - echo 'BUILD: pre_build step successful'
#     build:
#       commands:
#         - echo 'BUILD: Running build step'
#         - node ./scripts/invalidate.js
#       finally:
#         - echo 'BUILD: build step successful'
#     post_build:
#       commands:
#         - echo 'BUILD: Running post_build step'
#       finally:
#         - echo 'BUILD: post_build step successful'
