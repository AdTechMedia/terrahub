  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_default_network_acl:
        {{ name }}:
          default_network_acl_id: var.{{ name }}_default_network_acl_id
          # subnet_ids: []
          # ingress: 
          #   from_port: 0
          #   action: ''
          #   protocol: ''
          #   to_port: 0
          #   rule_no: 0
          #   icmp_code: 0
          #   cidr_block: ''
          #   ipv6_cidr_block: ''
          #   icmp_type: 0
          # egress: 
          #   to_port: 0
          #   protocol: ''
          #   from_port: 0
          #   rule_no: 0
          #   action: ''
          #   cidr_block: ''
          #   ipv6_cidr_block: ''
          #   icmp_code: 0
          #   icmp_type: 0
          # tags: 
          #   '[TO_BE_REPLACED]': ''
    variable:
      {{ name }}_default_network_acl_id:
        type: string
    output:
      id:
        value: aws_default_network_acl.{{ name }}.id
      thub_id:
        value: aws_default_network_acl.{{ name }}.id
      owner_id:
        value: aws_default_network_acl.{{ name }}.owner_id
      vpc_id:
        value: aws_default_network_acl.{{ name }}.vpc_id
