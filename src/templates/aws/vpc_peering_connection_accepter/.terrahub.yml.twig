  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_vpc_peering_connection_accepter:
        {{ name }}:
          vpc_peering_connection_id: var.{{ name }}_vpc_peering_connection_id
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # auto_accept: false
    variable:
      {{ name }}_vpc_peering_connection_id:
        type: string
    output:
      id:
        value: aws_vpc_peering_connection_accepter.{{ name }}.id
      thub_id:
        value: aws_vpc_peering_connection_accepter.{{ name }}.id
      vpc_id:
        value: aws_vpc_peering_connection_accepter.{{ name }}.vpc_id
      peer_owner_id:
        value: aws_vpc_peering_connection_accepter.{{ name }}.peer_owner_id
      accept_status:
        value: aws_vpc_peering_connection_accepter.{{ name }}.accept_status
      peer_region:
        value: aws_vpc_peering_connection_accepter.{{ name }}.peer_region
      peer_vpc_id:
        value: aws_vpc_peering_connection_accepter.{{ name }}.peer_vpc_id
