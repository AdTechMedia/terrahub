  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_spot_fleet_request:
        {{ name }}:
          target_capacity: var.{{ name }}_target_capacity
          ami: var.{{ name }}_ami
          instance_type: var.{{ name }}_instance_type
          iam_fleet_role: var.{{ name }}_iam_fleet_role
          launch_specification: 
          #   vpc_security_group_ids: 
          #   associate_public_ip_address: false
          #   ebs_block_device: 
          #     device_name: ''
          #     encrypted: false
          #     iops: 0
          #     snapshot_id: ''
          #     volume_size: 0
          #     volume_type: ''
          #     delete_on_termination: false
          # user_data: ''
          # instance_interruption_behaviour: ''
          # subnet_id: ''
          # instance_pools_to_use_count: 0
          # fleet_type: ''
          # iam_instance_profile: ''
          # placement_tenancy: ''
          # availability_zone: ''
          # root_block_device: 
          #   delete_on_termination: false
          #   iops: 0
          #   volume_size: 0
          #   volume_type: ''
          # monitoring: false
          # allocation_strategy: ''
          # ebs_optimized: false
          # key_name: ''
          # spot_price: ''
          # weighted_capacity: ''
          # target_group_arns: []
          # replace_unhealthy_instances: false
          # iam_instance_profile_arn: ''
          # wait_for_fulfillment: false
          # excess_capacity_termination_policy: ''
          # valid_from: ''
          # valid_until: ''
          # load_balancers: []
          # placement_group: ''
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # terminate_instances_with_expiration: false
    variable:
      {{ name }}_target_capacity:
        type: int
      {{ name }}_ami:
        type: string
      {{ name }}_instance_type:
        type: string
      {{ name }}_iam_fleet_role:
        type: string
    output:
      id:
        value: aws_spot_fleet_request.{{ name }}.id
      thub_id:
        value: aws_spot_fleet_request.{{ name }}.id
      spot_request_state:
        value: aws_spot_fleet_request.{{ name }}.spot_request_state
      subnet_id:
        value: aws_spot_fleet_request.{{ name }}.subnet_id
      availability_zone:
        value: aws_spot_fleet_request.{{ name }}.availability_zone
      root_block_device:
        value: aws_spot_fleet_request.{{ name }}.root_block_device
      key_name:
        value: aws_spot_fleet_request.{{ name }}.key_name
      target_group_arns:
        value: aws_spot_fleet_request.{{ name }}.target_group_arns
      client_token:
        value: aws_spot_fleet_request.{{ name }}.client_token
      load_balancers:
        value: aws_spot_fleet_request.{{ name }}.load_balancers
      placement_group:
        value: aws_spot_fleet_request.{{ name }}.placement_group
