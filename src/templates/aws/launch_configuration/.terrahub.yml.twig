  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_launch_configuration:
        {{ name }}:
          instance_type: var.{{ name }}_instance_type
          image_id: var.{{ name }}_image_id
          # key_name: ''
          # vpc_classic_link_security_groups: []
          # ebs_optimized: false
          # ephemeral_block_device: 
          #   device_name: ''
          #   virtual_name: ''
          # iam_instance_profile: ''
          # user_data: ''
          # vpc_classic_link_id: ''
          # root_block_device: 
          #   -
          #     delete_on_termination: false
          #     iops: 0
          #     volume_size: 0
          #     volume_type: ''
          # user_data_base64: ''
          # security_groups: []
          # associate_public_ip_address: false
          # ebs_block_device: 
          #   device_name: ''
          #   no_device: false
          #   iops: 0
          #   snapshot_id: ''
          #   volume_size: 0
          #   volume_type: ''
          #   encrypted: false
          #   delete_on_termination: false
          # name: ''
          # name_prefix: ''
          # spot_price: ''
          # placement_tenancy: ''
          # enable_monitoring: false
    variable:
      {{ name }}_instance_type:
        type: string
      {{ name }}_image_id:
        type: string
    output:
      id:
        value: aws_launch_configuration.{{ name }}.id
      thub_id:
        value: aws_launch_configuration.{{ name }}.id
      key_name:
        value: aws_launch_configuration.{{ name }}.key_name
      ebs_optimized:
        value: aws_launch_configuration.{{ name }}.ebs_optimized
      root_block_device:
        value: aws_launch_configuration.{{ name }}.root_block_device
      ebs_block_device:
        value: aws_launch_configuration.{{ name }}.ebs_block_device
      name:
        value: aws_launch_configuration.{{ name }}.name
