  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_subnet:
        {{ name }}:
          vpc_id: var.{{ name }}_vpc_id
          cidr_block: var.{{ name }}_cidr_block
          # ipv6_cidr_block: ''
          # availability_zone: ''
          # availability_zone_id: ''
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # map_public_ip_on_launch: false
          # assign_ipv6_address_on_creation: false
    variable:
      {{ name }}_vpc_id:
        type: string
      {{ name }}_cidr_block:
        type: string
    output:
      id:
        value: aws_subnet.{{ name }}.id
      thub_id:
        value: aws_subnet.{{ name }}.id
      ipv6_cidr_block:
        value: aws_subnet.{{ name }}.ipv6_cidr_block
      availability_zone:
        value: aws_subnet.{{ name }}.availability_zone
      availability_zone_id:
        value: aws_subnet.{{ name }}.availability_zone_id
      ipv6_cidr_block_association_id:
        value: aws_subnet.{{ name }}.ipv6_cidr_block_association_id
      arn:
        value: aws_subnet.{{ name }}.arn
      owner_id:
        value: aws_subnet.{{ name }}.owner_id
